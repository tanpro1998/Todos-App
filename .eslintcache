[{"/mnt/e/learnrj/todos-app/src/index.js":"1","/mnt/e/learnrj/todos-app/src/App.js":"2","/mnt/e/learnrj/todos-app/src/components/TodoForm.js":"3","/mnt/e/learnrj/todos-app/src/components/TodoList.js":"4","/mnt/e/learnrj/todos-app/src/components/Todo.js":"5"},{"size":411,"mtime":1609926885022,"results":"6","hashOfConfig":"7"},{"size":257,"mtime":1610101887892,"results":"8","hashOfConfig":"7"},{"size":1443,"mtime":1610105125071,"results":"9","hashOfConfig":"7"},{"size":1263,"mtime":1610183556346,"results":"10","hashOfConfig":"7"},{"size":1235,"mtime":1610103334870,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hnpp8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/mnt/e/learnrj/todos-app/src/index.js",[],["25","26"],"/mnt/e/learnrj/todos-app/src/App.js",["27"],"import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/e/learnrj/todos-app/src/components/TodoForm.js",[],"/mnt/e/learnrj/todos-app/src/components/TodoList.js",["28"],"/mnt/e/learnrj/todos-app/src/components/Todo.js",["29"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n\n    const[edit, setEdit] = useState({\n        id: null,\n        value:''\n    });\n\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        })\n    }\n\n    if(edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    return todos.map((todo, index) => (\n        <div\n         className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n          key={index}\n        >\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className='icons'>\n                <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className='delete-icon' \n                />\n                <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})}\n                className='ed-icon'/>\n            </div>\n        </div>\n    ));\n}\n\nexport default Todo;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":28,"column":31,"nodeType":"40","messageId":"41","endLine":28,"endColumn":32,"fix":"42"},{"ruleId":"34","severity":1,"message":"43","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"46","text":"47"},"'TodoList' is defined but never used.","no-global-assign","no-unsafe-negation",[655,656],""]